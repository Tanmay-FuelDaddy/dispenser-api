#ifndef VEEDERROOT_H
#define VEEDERROOT_H

#ifndef DISPENCER_H
  #include "Dispencer.h"
#endif

class VeederRoot: public Dispencer {
  public:
    VeederRoot(int buad_rate=9600, int pin_rx=17, int pin_tx=16);

  private:
    byte veeder_start[]           =  {0x7E, 0x01, 0xFF, 0x53, 0x75, 0x00, 0x38, 0x7E};
    byte veeder_mode[]            =  {0x7E, 0x01, 0xFF, 0x53, 0x75, 0x02, 0x36, 0x7E};
    byte veeder_finish[]          =  {0x7E, 0x01, 0xFF, 0x53, 0x75, 0x01, 0x37, 0x7E};
    byte veeder_totalizer[]        =  {0x7E, 0x01, 0xFF, 0x47, 0x6C, 0x4D, 0x7E};
    byte veeder_read_volume[]      =  {0x7E, 0x01, 0xFF, 0x47, 0x6B, 0x4E, 0x7E};
    byte veeder_read_preset[]     =  {0x7E, 0x01, 0xFF, 0x47, 0x6E, 0x4B, 0x7E};
    byte veeder_reset[]           =  {0x7E, 0x01, 0xFF, 0x52, 0x00, 0xAE, 0x7E};
    byte veeder_preset[]         =  {0x7E, 0x01, 0xFF, 0x53, 0x75, 0x03, 0x35, 0x7E};
    byte veeder_authorize_on[]    =  {0x7E, 0x01, 0xFF, 0x44, 0x25, 0x01, 0x96, 0x7E};
    byte veeder_authorize_off[]   =  {0x7E, 0x01, 0xFF, 0x44, 0x25, 0x00, 0x97, 0x7E};
    byte dummy_volume[]           =  {0x01, 0x41, 0x50, 0x31, 0x30, 0x30, 0x30, 0x35, 0x30, 0x30, 0x30, 0x7F, 0x6B};

};

#endif
